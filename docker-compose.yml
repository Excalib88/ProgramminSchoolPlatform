version: "3.9"
networks:
  default:
    driver: bridge
services:
  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  postgres_db:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: programming-school
    ports:
      - "5432:5432"
    networks:
      - default
    volumes:
      - postgres-data:/var/lib/postgresql/data
  app: 
    container_name: programming-school
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    expose:
      - "80"
    networks:
      - default
    depends_on:
      - postgres_db
  front:
    container_name: programming-school-front
    build:
      context: .
      dockerfile: ./programming-school/Dockerfile
    ports:
      - "81:81"
    expose:
      - "81"
    networks:
      - default
    depends_on:
      - app
volumes:
  postgres-data: